version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: rzd_bot
      POSTGRES_USER: rzd_user
      POSTGRES_PASSWORD: rzd_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rzd_user -d rzd_bot"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Bot Application
  bot:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://rzd_user:rzd_password@postgres:5432/rzd_bot
      - REDIS_URL=redis://redis:6379/0
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # Celery Worker for Background Tasks
  celery-worker:
    build: .
    command: celery -A src.celery_app worker --loglevel=info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://rzd_user:rzd_password@postgres:5432/rzd_bot
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # Celery Beat Scheduler
  celery-beat:
    build: .
    command: celery -A src.celery_app beat --loglevel=info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://rzd_user:rzd_password@postgres:5432/rzd_bot
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

